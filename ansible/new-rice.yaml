---
- name: Rice
  hosts: localhost
  vars:
    dotfiles_repo: "https://github.com/anba94/dotfiles.git"
    dotfiles_dir: "~/.dotfiles"
    oh_my_zsh_dir: "{{ ansible_env.HOME }}/.oh-my-zsh"
    custom_plugins_dir: "{{ oh_my_zsh_dir }}/custom/plugins"

  tasks:

    - name: Inform about unsupported distribution
      debug:
        msg: "This playbook is designed for Fedora, CentOS 8+, or RHEL 8+. Your current distribution ({{ ansible_distribution }}) may not be supported."
      when: ansible_distribution != "Fedora" and 
            not (ansible_distribution == "CentOS" and ansible_distribution_major_version|int >= 8) and
            not (ansible_distribution == "RedHat" and ansible_distribution_major_version|int >= 8)

    - name: Ensure stow is installed
      become: true
      package:
        name: stow
        state: present
        
    - name: Install Yaru icons
      become: yes
      dnf:
        name: yaru-icon-theme
        state: present

    - name: Enable COPR repository for Bibata cursor themes
      become: yes
      command: dnf copr enable -y peterwu/rendezvous
      args:
        creates: /etc/yum.repos.d/_copr:copr.fedorainfracloud.org:peterwu:rendezvous.repo
      when: ansible_distribution == "Fedora" or 
            (ansible_distribution == "CentOS" and ansible_distribution_major_version|int >= 8) or
            (ansible_distribution == "RedHat" and ansible_distribution_major_version|int >= 8)

    - name: Install Bibata cursor themes
      become: yes
      dnf:
        name: bibata-cursor-themes
        state: present
      when: ansible_distribution == "Fedora" or 
            (ansible_distribution == "CentOS" and ansible_distribution_major_version|int >= 8) or
            (ansible_distribution == "RedHat" and ansible_distribution_major_version|int >= 8)

    - name: Check if Oh My Zsh is installed
      stat:
        path: "{{ oh_my_zsh_dir }}"
      register: oh_my_zsh_installed

    - name: Install Oh My Zsh
      shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended
      when: not oh_my_zsh_installed.stat.exists

    - name: Ensure custom plugins directory exists
      file:
        path: "{{ custom_plugins_dir }}"
        state: directory
        mode: '0755'

    - name: Clone Pokemon Color Scripts repository
      git:
        repo: https://gitlab.com/phoneybadger/pokemon-colorscripts.git
        dest: "{{ ansible_env.HOME }}/git/other/pokemon-colorscripts"
        version: main

    - name: Run installation script
      become: yes
      command: ./install.sh
      args:
        chdir: "{{ ansible_env.HOME }}/git/other/pokemon-colorscripts"
      register: install_result
      changed_when: install_result.rc == 0

    - name: Clone zsh-autosuggestions plugin
      git:
        repo: https://github.com/zsh-users/zsh-autosuggestions.git
        dest: "{{ custom_plugins_dir }}/zsh-autosuggestions"

    - name: Clone zsh-syntax-highlighting plugin
      git:
        repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
        dest: "{{ custom_plugins_dir }}/zsh-syntax-highlighting"

    - name: Clone fast-syntax-highlighting plugin
      git:
        repo: https://github.com/zdharma-continuum/fast-syntax-highlighting.git
        dest: "{{ custom_plugins_dir }}/fast-syntax-highlighting"

    - name: Clone zsh-autocomplete plugin
      git:
        repo: https://github.com/marlonrichert/zsh-autocomplete.git
        dest: "{{ custom_plugins_dir }}/zsh-autocomplete"
        
    - name: Clone dotfiles repository
      git:
        repo: "{{ dotfiles_repo }}"
        dest: "{{ dotfiles_dir }}"
        version: main
        clone: yes
        update: yes
        force: yes

    - name: Delete .zshrc and .bashrc files
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ ansible_env.HOME }}/.zshrc"
        - "{{ ansible_env.HOME }}/.bashrc"

    - name: Apply dotfiles using stow with adopt option
      command: stow --adopt .
      args:
        chdir: "{{ dotfiles_dir }}"